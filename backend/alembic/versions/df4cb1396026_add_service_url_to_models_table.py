"""Add service_url to models table

Revision ID: df4cb1396026
Revises:
Create Date: 2025-07-04 11:21:54.393082

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "df4cb1396026"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_chats_id"), table_name="chats")
    op.drop_index(op.f("ix_chats_updated_at"), table_name="chats")
    op.drop_index(op.f("ix_chats_user_id"), table_name="chats")
    op.drop_table("chats")
    op.drop_index(op.f("ix_files_id"), table_name="files")
    op.drop_table("files")
    op.drop_index(op.f("ix_models_id"), table_name="models")
    op.drop_table("models")
    op.drop_index(op.f("ix_messages_chat_id"), table_name="messages")
    op.drop_index(op.f("ix_messages_id"), table_name="messages")
    op.drop_table("messages")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "username", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("full_name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "role",
            postgresql.ENUM("ADMIN", "USER", name="userrole"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("system_prompt", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "last_login_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "messages",
        sa.Column(
            "role",
            postgresql.ENUM("SYSTEM", "USER", "ASSISTANT", name="messagerole"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("content", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM("COMPLETED", "ERROR", "PENDING", name="messagestatus"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("chat_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("position", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("model_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["chat_id"], ["chats.id"], name="messages_chat_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["model_id"], ["models.id"], name="messages_model_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="messages_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(op.f("ix_messages_id"), "messages", ["id"], unique=False)
    op.create_index(op.f("ix_messages_chat_id"), "messages", ["chat_id"], unique=False)
    op.create_table(
        "models",
        sa.Column("display_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "max_context_tokens", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("has_thinking", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "default_params",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name="models_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_index(op.f("ix_models_id"), "models", ["id"], unique=False)
    op.create_table(
        "files",
        sa.Column("filename", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("file_type", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("file_size", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("file_path", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("message_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["message_id"], ["messages.id"], name=op.f("files_message_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("files_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("files_pkey")),
    )
    op.create_index(op.f("ix_files_id"), "files", ["id"], unique=False)
    op.create_table(
        "chats",
        sa.Column("title", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("chats_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("chats_pkey")),
    )
    op.create_index(op.f("ix_chats_user_id"), "chats", ["user_id"], unique=False)
    op.create_index(op.f("ix_chats_updated_at"), "chats", ["updated_at"], unique=False)
    op.create_index(op.f("ix_chats_id"), "chats", ["id"], unique=False)
    # ### end Alembic commands ###
